<?php

namespace Proxies\__CG__\Esprit\UserBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EspEtudiant extends \Esprit\UserBundle\Entity\EspEtudiant implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNomEt($nomEt)
    {
        $this->__load();
        return parent::setNomEt($nomEt);
    }

    public function getNomEt()
    {
        $this->__load();
        return parent::getNomEt();
    }

    public function setPnomEt($pnomEt)
    {
        $this->__load();
        return parent::setPnomEt($pnomEt);
    }

    public function getPnomEt()
    {
        $this->__load();
        return parent::getPnomEt();
    }

    public function setDateNaisEt($dateNaisEt)
    {
        $this->__load();
        return parent::setDateNaisEt($dateNaisEt);
    }

    public function getDateNaisEt()
    {
        $this->__load();
        return parent::getDateNaisEt();
    }

    public function setLieuNaisEt($lieuNaisEt)
    {
        $this->__load();
        return parent::setLieuNaisEt($lieuNaisEt);
    }

    public function getLieuNaisEt()
    {
        $this->__load();
        return parent::getLieuNaisEt();
    }

    public function setNatureEt($natureEt)
    {
        $this->__load();
        return parent::setNatureEt($natureEt);
    }

    public function getNatureEt()
    {
        $this->__load();
        return parent::getNatureEt();
    }

    public function setFonctionEt($fonctionEt)
    {
        $this->__load();
        return parent::setFonctionEt($fonctionEt);
    }

    public function getFonctionEt()
    {
        $this->__load();
        return parent::getFonctionEt();
    }

    public function setAdresseEt($adresseEt)
    {
        $this->__load();
        return parent::setAdresseEt($adresseEt);
    }

    public function getAdresseEt()
    {
        $this->__load();
        return parent::getAdresseEt();
    }

    public function addInscription(\Esprit\SeminaireBundle\Entity\InscritSemin $inscriptions)
    {
        $this->__load();
        return parent::addInscription($inscriptions);
    }

    public function removeInscription(\Esprit\SeminaireBundle\Entity\InscritSemin $inscriptions)
    {
        $this->__load();
        return parent::removeInscription($inscriptions);
    }

    public function getInscriptions()
    {
        $this->__load();
        return parent::getInscriptions();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nomEt', 'pnomEt', 'dateNaisEt', 'lieuNaisEt', 'natureEt', 'fonctionEt', 'adresseEt', 'inscriptions');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}